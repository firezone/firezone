[package]
name = "firezone-gui-client"
# mark:next-gui-version
version = "1.5.4"
description = "Firezone"
edition = { workspace = true }
default-run = "firezone-gui-client"
authors = ["Firezone, Inc."]
license = { workspace = true }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem
# DO NOT REMOVE!!
# TODO: We can probably remove this, per <https://github.com/tauri-apps/tauri/releases/tag/tauri-v2.0.0-beta.8>
# I don't know how to verify this change, so I won't do it right now.
custom-protocol = ["tauri/custom-protocol"]

[dependencies]
anyhow = { workspace = true }
arboard = { workspace = true }
atomicwrites = { workspace = true }
backoff = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true, features = ["derive", "env"] }
client-shared = { workspace = true }
connlib-model = { workspace = true }
derive_more = { workspace = true, features = ["debug"] }
firezone-bin-shared = { workspace = true }
firezone-logging = { workspace = true }
firezone-telemetry = { workspace = true }
futures = { workspace = true }
hex = { workspace = true }
humantime = { workspace = true }
ip-packet = { workspace = true }
keyring = { workspace = true, features = ["crypto-rust", "sync-secret-service", "windows-native"] }
native-dialog = { workspace = true }
output_vt100 = { workspace = true }
phoenix-channel = { workspace = true }
png = { workspace = true } # `png` is mostly free since we already need it for Tauri
rand = { workspace = true }
reqwest = { workspace = true, features = ["stream", "rustls-tls"] }
rustls = { workspace = true }
sadness-generator = { workspace = true }
secrecy = { workspace = true }
semver = { workspace = true, features = ["serde"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_variant = { workspace = true }
strum = { workspace = true }
subtle = { workspace = true }
tauri = { workspace = true, features = ["tray-icon", "image-png"] }
tauri-plugin-dialog = { workspace = true }
tauri-plugin-notification = { workspace = true }
tauri-plugin-opener = { workspace = true }
tauri-plugin-shell = { workspace = true }
tauri-runtime = { workspace = true }
tauri-utils = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["signal", "time", "macros", "rt", "rt-multi-thread"] }
tokio-stream = { workspace = true }
tokio-util = { workspace = true, features = ["codec"] }
tracing = { workspace = true }
tracing-log = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
tslink = "0.3.0"
url = { workspace = true }
uuid = { workspace = true, features = ["v4"] }
zip = { workspace = true, features = ["deflate", "time"] }

[target.'cfg(target_os = "linux")'.dependencies]
dirs = { workspace = true }
nix = { workspace = true, features = ["user"] }
sd-notify = { workspace = true }
tracing-journald = { workspace = true }

[target.'cfg(target_os = "macos")'.dependencies]

[target.'cfg(target_os = "windows")'.dependencies]
admx-macro = { workspace = true }
tauri-winrt-notification = "0.7.2"
windows-service = { workspace = true }
winreg = { workspace = true }

[target.'cfg(target_os = "windows")'.dependencies.windows]
workspace = true
features = [
    "Win32_Foundation",
    "Win32_System_Threading",
    "Win32_System_Pipes", # For IPC system
]

[build-dependencies]
anyhow = { workspace = true }
tauri-build = { workspace = true, features = [] }

[dev-dependencies]
tempfile = { workspace = true }

[lints]
workspace = true

[tslink]
enum_representation = "discriminated"
