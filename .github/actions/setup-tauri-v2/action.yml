# From https://tauri.app/v1/guides/getting-started/prerequisites
name: "Setup Tauri"
description: "Sets up the dependencies for building and testing Tauri apps"
inputs:
  runtime:
    description: "Whether to also set up runtime dependencies"
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Apt-get update
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get update
      shell: bash
    - name: Install Tauri build deps
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get --yes install build-essential curl file libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev libssl-dev libxdo-dev wget
      shell: bash
    - name: Install gnome-keyring
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get --yes install gnome-keyring
      shell: bash
      # This is only needed if we'll launch the Tauri GUI, so it's redundant for clippy / test
      # This is what the Tauri CI tests use
      # <https://github.com/tauri-apps/tauri/blob/3fb414b61ad7cfce67751230826fddfb39effec5/.github/workflows/bench.yml#L74>
    - name: Install Tauri runtime deps
      if: ${{ runner.os == 'Linux' && inputs.runtime == 'true' }}
      run: sudo apt-get --yes install at-spi2-core xvfb
      shell: bash
    - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      if: ${{ runner.os == 'Windows' && inputs.runtime == 'true' }}
      id: cache-webview2-installer
      with:
        path: WebView2Installer.exe
        key: ${{ runner.os }}-${{ runner.arch }}-webview2-offline-installer
    - name: Download WebView2 bootstrapper
      if: ${{ runner.os == 'Windows' && steps.cache-webview2-installer.outputs.cache-hit != 'true' && inputs.runtime == 'true' }}
      # This is the "Evergreen" bootstrapper from Microsoft
      # <https://developer.microsoft.com/en-us/microsoft-edge/webview2/?form=MA13LH#download>
      # Unfortunately, this makes the test non-deterministic.
      # Controlling the version would be difficult.
      run: Invoke-WebRequest -Uri https://go.microsoft.com/fwlink/?linkid=2124701 -OutFile WebView2Installer.exe
      shell: pwsh
    - name: Install WebView2
      if: ${{ runner.os == 'Windows' && inputs.runtime == 'true' }}
      # This downloads about 200 MB and takes about 5 minutes on my VM
      # So we could fault in WebView2 from the client exe without the MSI if we needed.
      # Currently the MSI does this and it's a little janky.
      run: Start-Process WebView2Installer.exe -ArgumentList "/install" -Wait
      shell: pwsh
      # Otherwise one of the Tauri macros panics in static analysis
    - name: Create `rust/gui-client/dist`
      run: mkdir "$GITHUB_WORKSPACE/rust/gui-client/dist"
      shell: bash
