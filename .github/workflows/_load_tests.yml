name: Load Tests
run-name: Triggered from ${{ github.event_name }} by ${{ github.actor }}
on:
  workflow_call:
    inputs:
      relay_image:
        type: string
      gateway_image:
        type: string
      client_image:
        type: string
      http_test_server_image:
        type: string

jobs:
  load-tests:
    name: ${{ matrix.test.name }}
    runs-on: ubuntu-22.04-xlarge
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    env:
      API_IMAGE: ghcr.io/firezone/api
      API_TAG: ${{ github.sha }}
      ELIXIR_IMAGE: ghcr.io/firezone/elixir
      ELIXIR_TAG: ${{ github.sha }}
      RELAY_IMAGE: ${{ inputs.relay_image }}
      RELAY_TAG: ${{ github.sha }}
      GATEWAY_IMAGE: ${{ inputs.gateway_image }}
      GATEWAY_TAG: ${{ github.sha }}
      CLIENT_IMAGE: ${{ inputs.client_image }}
      CLIENT_TAG: ${{ github.sha }}
      HTTP_TEST_SERVER_IMAGE: ${{ inputs.http_test_server_image }}
      HTTP_TEST_SERVER_TAG: ${{ github.sha }}
    strategy:
      fail-fast: false
      matrix:
        test:
          - name: relayed-download
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/ghcr-docker-login
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Seed database
        working-directory: ./scripts/tests/load
        run: docker compose run elixir /bin/sh -c 'cd apps/domain && mix ecto.migrate --migrations-path priv/repo/migrations --migrations-path priv/repo/manual_migrations && mix ecto.seed'
      - name: Start docker compose in the background
        working-directory: ./scripts/tests/load
        run: |
          set -xe

          docker compose pull postgres
          docker compose pull download.httpbin
          docker compose pull api
          docker compose pull relay-1
          docker compose pull relay-2
          docker compose pull gateway
          docker compose pull client-1
          docker compose pull elixir

          docker compose up -d postgres
          docker compose up -d download.httpbin
          docker compose up -d api
          docker compose up -d relay-1
          docker compose up -d relay-2
          docker compose up -d gateway

          # Up the clients
          docker compose up -d

          sleep 3

      - run: ./scripts/tests/load/${{ matrix.test.name }}.sh

      - name: Ensure Client emitted no warnings
        if: "!cancelled()"
        working-directory: ./scripts/tests/load
        run: |
          for i in {1..200}; do
            docker compose logs "client-$i" | \
              grep "WARN" && exit 1 || exit 0
          done

      - name: Show Client logs
        if: "!cancelled()"
        working-directory: ./scripts/tests/load
        run: |
          for i in {1..200}; do
            docker compose logs "client-$i"
          done

      - name: Show Relay-1 logs
        if: "!cancelled()"
        working-directory: ./scripts/tests/load
        run: docker compose logs relay-1

      - name: Show Relay-2 logs
        if: "!cancelled()"
        working-directory: ./scripts/tests/load
        run: docker compose logs relay-2

      - name: Ensure Gateway emitted no warnings
        if: "!cancelled()"
        working-directory: ./scripts/tests/load
        run: docker compose logs gateway | grep "WARN" && exit 1 || exit 0

      - name: Show Gateway logs
        if: "!cancelled()"
        working-directory: ./scripts/tests/load
        run: docker compose logs gateway

      - name: Show API logs
        if: "!cancelled()"
        working-directory: ./scripts/tests/load
        run: docker compose logs api
