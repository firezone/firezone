receivers:
  otlp:
    protocols:
      http:
        endpoint: localhost:4318

exporters:
  googlecloud:
    log:
      default_log_name: opentelemetry.io/collector-exported-log

processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 65
    spike_limit_percentage: 20

  batch:

  resourcedetection:
    detectors: [gcp]
    timeout: 10s

  filter/drophttp:
    error_mode: ignore
    traces:
      span:
        - 'attributes["http.route"] == "/healthz"'

  tail_sampling:
    # Wait time for complete traces
    decision_wait: 30s
    # Number of traces to keep in memory while waiting for completion
    num_traces: 50000
    # Expected number of new traces per second
    expected_new_traces_per_sec: 20
    # Sampling policies in order of evaluation
    policies:
      # Policy 1: Always sample traces with errors (any span with error status)
      - name: errors_policy
        type: status_code
        status_code: {status_codes: [ERROR]}

      # Policy 2: Always sample traces with HTTP 4xx/5xx status codes
      - name: http_errors_policy
        type: numeric_attribute
        numeric_attribute: {key: http.status_code, min_value: 400, max_value: 599}

      # Policy 3: Always sample traces that contain spans with specific error attributes
      # This catches application-level errors that might not set span status
      - name: app_errors_policy
        type: string_attribute
        string_attribute: {key: error, values: ["true"]}

      # Policy 4: Sample 10% of successful traces (no errors, normal completion)
      - name: successful_traces_policy
        type: probabilistic
        probabilistic: {sampling_percentage: 10}

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, filter/drophttp, tail_sampling, batch]
      exporters: [googlecloud]
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, filter/drophttp, batch]
      exporters: [googlecloud]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, filter/drophttp, batch]
      exporters: [googlecloud]
